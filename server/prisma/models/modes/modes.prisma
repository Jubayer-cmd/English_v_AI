// Mode System for English Learning
model Mode {
  id          String      @id @default(cuid())
  name        String      // e.g., "Famous People", "Travel Scenarios", "Business English"
  description String?
  icon        String?     // Icon identifier for the mode
  isActive    Boolean     @default(true)
  order       Int         @default(0) // For ordering in sidebar
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  scenarios   Scenario[]

  @@map("mode")
}

model Scenario {
  id            String        @id @default(cuid())
  name          String        // e.g., "Albert Einstein", "Eiffel Tower Visit"
  description   String?
  image         String?       // Image URL for the scenario
  prompt        String        // AI prompt/personality for this scenario
  isActive      Boolean       @default(true)
  order         Int           @default(0)
  mode          Mode          @relation(fields: [modeId], references: [id], onDelete: Cascade)
  modeId        String
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  chatSessions  ChatSession[]

  @@map("scenario")
}

model ChatSession {
  id                String      @id @default(cuid())
  user              User        @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId            String
  scenario          Scenario    @relation(fields: [scenarioId], references: [id], onDelete: Cascade)
  scenarioId        String
  startedAt         DateTime    @default(now())
  endedAt           DateTime?
  totalMessages     Int         @default(0)
  userMessages      Int         @default(0)
  aiMessages        Int         @default(0)
  sessionData       Json?       // Store conversation metadata
  messages          ChatMessage[]

  @@map("chat_session")
}

model ChatMessage {
  id          String      @id @default(cuid())
  session     ChatSession @relation(fields: [sessionId], references: [id], onDelete: Cascade)
  sessionId   String
  content     String
  role        String      // "user" or "assistant"
  timestamp   DateTime    @default(now())
  metadata    Json?       // Store additional message data (audio, corrections, etc.)

  @@map("chat_message")
}
